name: Deploy Dockerized Cascade Chatbot App
on:
  workflow_dispatch:
    inputs:
      name:
        description: "Deploy Cascade Chatbot from main"
        default: "main"

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub-hosted runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the code from GitHub repository

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  # Set up Docker Buildx (used for multi-platform builds)

    - name: Build Docker Image
      run: |
        docker build -t flask-app .  # Build the Docker image from Dockerfile

    - name: Save Docker Image as tarball
      run: |
        docker save flask-app > flask-app.tar  # Save the Docker image to a tarball for transfer

    - name: Transfer Docker Image to DigitalOcean
      uses: appleboy/scp-action@v0.1.5  # Use SCP action to transfer the image
      with:
        host: ${{ secrets.SERVER_IP }}  # DigitalOcean IP
        username: ${{ secrets.USERNAME }}  # SSH Username (e.g., root)
        key: ${{ secrets.PRIVATE_KEY }}  # SSH Private Key for login
        port: 22  # Default SSH port
        source: "flask-app.tar"  # Local file (Docker tarball)
        target: "/home/docker-images"  # Remote directory for the file

    - name: Deploy Docker Image on DigitalOcean
      uses: appleboy/ssh-action@v0.1.5  # Use SSH action to run commands on DigitalOcean
      with:
        host: ${{ secrets.SERVER_IP }}  # DigitalOcean IP
        username: ${{ secrets.USERNAME }}  # SSH Username
        key: ${{ secrets.PRIVATE_KEY }}  # SSH Private Key for login
        port: 22  # Default SSH port
        script: |
          cd /home/docker-images  # Navigate to the directory containing the tarball
          docker load < flask-app.tar  # Load the Docker image from the tarball
          docker run -d -p 5000:5000 --name flask-app flask-app  # Run the Flask app in a Docker container
